disk
chief programmer
symbolic language
unit test
service provider
generator
inductive assertion
outgoing link
run time
system support
develop human resource plan
end item
control flow diagram
computing center
conceptual model
baseline management
milestone
fault tolerant
entity subtype
design strategy
approval
maintenance
failure mode
working metamodel
network chart
iterative construct
technical review
upload
information item
binder
soft error
data flowchart
approach
keyword
translator
feature branch
software tag
requirements elicitation
transaction schema
test item
interim function point count
persistent storage
T-profile
enterprise
absolute instruction
microprogrammable computer
plan communications
secondary risk
agile software development
alpha testing
class-level attribute
identify stakeholders
support activity group
activity duration
parent box
master library
process tailoring
control flow
essential Scrum
data bank
minimum releasable features
higher order language
support software
specification tree
machine readable
soft failure
patch
level 1 record group
function type
plan quality
rating interval
data flow graph
bug
reconcile
Cynefin
software quality evaluation
task structuring
S-curve
programming language
free float
content link
plan
develop project charter
page zero
software development plan
dynamic analysis
reentry point
command driven
requirements engineering
adaptive maintenance
relationship instance
transaction file
trend
taxonomy
trade-off
promotion
automated build
holding cost
powertype
resource calendar
quiescing
range sort
assignment statement
reliability growth
output place
if-then-else
iteration execution
analysis model
imposed date
diagonal microinstruction
human behavior
resource management
file type referenced
single done
object-oriented structured design
offline
measurement method
reverse execution
query
algorithmic language
hardware monitor
order clash
Extreme Programming
declarative language
limits
sort
minicomputer
xenodochial
data declaration source statement
local change
origin attribute
rational unified process
software integrity level
evaluation module
development
ontology
delimiter
project manager
context-aware search
software requirements phase
latency
factoring
reenterable
heading
allocated requirement
high order language
data function
change and configuration management
life cycle cost
component
internationalization
monitor and control project work
project management system
link validity
errata
software development notebook
standards
language binding
requirements derivation
transient error
software asset management
verification and validation effort
arity
regulation
product owner
earned value technique
t-shirt sizing
coincidental cohesion
parameterized high-level net graph
marketing organization
primary key
customization
dependency
quality control
decompile
syntax
object language
product configuration identification functional baseline
hidden
bus number
life cycle processes
software item
physical metadata layer
ancestor
skeleton
operational
self-organization
compile-and-go
assignable cause
procedure-oriented language
program counter
respecialize unspecialize
diagram number
work product
maintenance manual
state
staging stream
online documentation system
expandability
collaboration
static error
modular decomposition
object-oriented language
evaluation records
schedule baseline
activity code
notebook computer
instruction repertoire
crash
requirements document
single-step operation
control statement
operator field
Database Connectivity
absolute assembler
distribution copy
logical type
post-implementation review
influence diagram
information technology
derived participant party
maintenance infrastructure
empiricism
emergent opportunity
composite task
keyword driven testing
magic number
digital
For Exposition Only page
human systems engineering
stress testing
statement of work
acquire project team
co-located team
compiler
methodology
node number
delivered source statement
lessons learned knowledge base
functional functional specification
critical path
installation and checkout phase
menu-driven
computer-based software system
proof of correctness
localization
visibility
process improvement program
support
sequential clustering
systems engineering
framework
identifier
parallel construct
burn down chart
black box
domain architecture
product life cycle
upward compression
three-point estimate
abend
image processing
nonfunctional requirement
component team
storage breakpoint
unadjusted function point count
postprocessor
function point count
data source
bubble chart
test approach
method engineer
escrow
data coupling
evaluation activity
outgoing synchronization
computerize
generality
invocation
process action plan
system safety
interactive compiler
grooming
scrumban
software requirements management
test readiness review
incident
variation point
retrospective trace
project scope management
Eclipse
data warehouse
single-hit decision table
formal language
disassembler
system maintenance
software maintenance
subphase
test execution
overhead operation
contingency allowanceH
arrow segment
validation
nomenclature standard
lifecycle
software quality characteristic
pivot
functional user requirements
parameterized collection class
version description document
software requirements specification
classification process
early-failure period
pragma
minimum delay programming
techniques
job function
parent diagram
non-procedural programming language
pager
cross-assembler
design language
table heading
cost as an independent variable
insight backlog
modified source statement
data-structure-oriented design
process group
code of accounts
background
measurement process
presentable
product roadmap
flow
subject domain
recursion
output primitive
serial
transaction transparency
incoming change set
division of standards
epic
system life cycle software development cycle
task complete definition
product backlog
subroutine
four-address instruction
token
integrity assurance authority
relationship type
method standard
revision
non-functional requirement
realization
turnkey system
managed network
given-when-then
stub
software repository
camera-ready originals
asynchronous
orphan
fifth generation language
load map
multiple inheritance
disorder domain
portfolio planning
abstract design
multiaddress four-two-address address instruction
security authority
assessment participant
interface specification
assessment scope
halt
transition variables
build engine
feature creep
task-structuring criteria
schedule development
cost variance
shadow class
licensing standard
activity list
assembly language
U-curve optimization
tag
verso
address field
develop project team
component standard
software hazard
backlog item
configuration index
online
minimum tasks
direct instruction
macrogenerator
risk tolerance
statistical process control
rule
customer test
key migration
capsule manager
mechanism arrow
protocol
endeavor element
Artifacts page
logical cohesion
problem report
contractual requirement
chief product owner
pseudo instruction
software project life cycle model
rate-monotonic algorithm
operator
overflow exception
batch
maintenance program
baseline staging stream
driver
terminal
target capability
kanban board
lock
error model
formalization
manage stakeholder expectations
mechanicals
abstract class
process improvement sponsor
capability indicator
operation part
stable process
alternate path
join
risk transfer
Scrum framework
associative entity type
relocator
dynamic binding
close procurements
simple design
scope change
data characteristic
suspect
nesting
common block
entry field
path
mutual exclusion
synchronous message communication without reply
optional requirement
software library
action
generalize
observation period
expected result
epic stories
program
underlying license
discrete effort
conduct procurements
projectized organization
instruction cycle
happened-upon technical debt
root cause
feature based planning
exploration
business process sketch
cloning
parallel development
feature freeze
initiating event
merge from current
dot voting
system documentation
source code
normalization
reverse engineering
front matter
development life cycle
communication interface
fast feedback
principle of least astonishment
actual duration
type
productivity
computer program abstract
development project
concept of operations document
printed documentation
boy scout rule
module strength
test repeatability
portfolio
beta testing
first input routine
contract administration
responsibility assignment matrix
database
defect aging
organizational breakdown structure
embedded documentation
design specification
reparent
invocation submit
mark-up
peripheral equipment
effort
load rule
logical record
software configuration management
mitigating function
screen flow
structured design
process measures
fist to five
microinstruction
slush
dynamic buffering
reuse sponsor
derived type
alternate key
communication management plan
non-time-critical computationally intensive task
risk management process
operation
resolve
primitive
design constraints
page reference
kano analysis
task submission
machine-dependent
resource allocation
compatibility
processing logic
authoring system
interrupt request
project schedule network diagram
temporal clustering
requirement
system library
window
shared resources
plan risk responses
principal
prototype
suite
backlog grooming
configuration control
source address
fail fast
cluster manager
reengineering
microprocessor
user state
measurable concept
programmer manual
Ada
support staff-hour
busy time
fault secure
program design language
emergency maintenance
instruction modifier
endnotes
flag
nonprocedural programming language
Government-Off-The-Shelf
user acceptance tests
comparator
user roles
early finish date
virtual
computer aided software engineering
sprintable story
symbolic trace
skunkworks
lead time
status code
security kernel
external event
remote terminal emulator
target program
integrated repository
quality management plan
Apache Ant
portlet
assessment indicator
precedence diagramming method
mutation
physical configuration audit
operation interface
procedural programming language
help system
prescriptive process
copyright
idle work
analog computer
override
relative chain frequency
persistence transparency
address instruction
structural testing
output product
process attribute rating
antifragile
Unified Modeling Language
loop body
control costs
risk treatment
computer word
starting address
measurement function
accuracy of measurement
critical item
intrinsic relationship
data analysis
distributed development team
data management
turnaround time
topdown
function name
real type
squiggle
call graph
top-down design
step-by-step operation
agile release train
system analysis
passive white space
functional configuration identification
requirements specification language
cost management plan
homogeneous redundancy
work in progress limits
jenkins
and validation
automated or assisted software process
role name
transform-centered design
module testing
syntactic error
design pattern
project team directory
expensed cost
project chartering
lockout
functional testing
location facility
testing
quality factor value
formal evaluation process
loop invariant
class hierarchy
sprint mapping
object set
extreme programming
release management
use case diagram
value list constraint
late finish date
error message
agile development practices
active interconnection
recovery
destructive read
theme
appraisal findings
split key
navigation
hybrid coupling
IDEF0 model
junction
programmable breakpoint
system life cycle
upward compatible
software characteristic
reachable marking
rolling wave planning
microcomputer
storage device
idle time
timing diagram
container interface
call by name
deblock
product owner proxy
storage allocation
overload
project inception
secondary window
multiprogramming
work authorization
value class
mixed entry table
product metric
invariant
test-driven development
correctness
node
persona
bottleneck
second generation language
instruction set
commit window
workaround
independent
accessibility
unit of measurement
target language
release
deep
portfolio vision
unit
on-line
practice
planning poker
daily scrum
state diagram
frozen branch
rescoring
microword
basic flow
objective evidence
throughput reference value
network path
log
programming in pairs
evaluation technology
post-tested iteration
single-operand instruction
action stub
assumptions analysis
idle
test unit
data medium
contravariance
innovation accounting
road map
communications domain
measure
mechanism
instance data
line of code
stakeholders
personas
subject tool
superclass
Groschs law
security interaction policy
Petri net
result
synchronization
proof
assistive technologies
user's manual
running time
annotation
binary digit
trade secret
product backlog refinement
critical section
generally accepted
potentially shippable product increment
resume
cycle stealing
Representational State Transfer
adaptation
Chapin chart
cost performance baseline
generalization structure
four-plus-one address instruction
user need
conceptual system design
degree of confidence
formal requirements language
code freeze
temporal cohesion
software development cycle
system description
activation
project management
ideal hours
throwclear
reachability set
self-descriptiveness
third generation language
product support
separate documentation
entity
project
duration
direct staff-hour
successor activity
reverse proxy
technical standard
conflict
path testing
goods
component integration test
software quality measure
dynamic dump
formal qualification review
video display terminal
resource breakdown structure
certified scrummaster
process attribute
ground rules
clash
technical management
software design concept
unit test framework
collection-valued class
external input
fit
random failure
event trace
testing task iteration
document set
change request
multiple exclusive selective construct
and function version
upstream
code of ethics standard
event sequence diagram
boundary
plan standard
application boundary
chief programmer team
self-directed work team
adapter
map program
defensive programming
software header
incipient failure
baseline
implementation
institutionalization
operation field
start-to-start
text editor
data date
standup-daily meeting
sensitivity analysis
risk trigger
actual parameter
source statements
active text
validation test
no-op
transform analysis
must-have features
certification artifact
test driven development
allocation
record
developed source statement
specification language
abnormal end
subclass
meta-relationship
initial function point count
post-development review
software requirements analysis
fault dictionary
effective full license
in-process product
three amigos
adoption process
performed process
model layers
activity
probability and impact matrix
strategy
application problem
observation
iteration retrospective
process assessment
cardinality constraint
assemble-and-go
model note number
signal
selective dump
change control
scalar-valued class
application
proposed change
layout chart
subproject
merge
links explorer
inheritance
local variable
identity-style view
diverse redundancy
design requirement
verification sponsor
modularity
documentation relationships to one another
external inquiry
repair
set
target machine
domain expert
natural key
project human resource management
system development cycle
startup
key-style view
customer uncertainty
perfective maintenance
hierarchical input-process-output
boundary value
low-level language
loopback testing
enhancement project
portfolio metrics
execute
output sort
linkage editor
qualification testing
authorization
non-delivered source statement
stand-up
static dump
reference dimension
flowcharter
tolerance
test class
addressing
risk leverage factor
RM-ODP
instance-level responsibility
risk dimension
single-level encoding
scrum sprint
alphanumeric
retainage
firmware
condition stub
traceability matrix
timing analyzer
musketeer attitude
whitespace
higher-level management
cost plus fee
migrated attribute
if-then-else branch
control program
vendor
optional task
system
fixed-price-incentive-fee contract
traceability
last responsible moment
machine code
chickens and pigs
component testing
actual cost
information management
model page
team pi objectives
sequential cohesion
generic ancestor
discrete
table
re-entrant
operation and maintenance phase
category
forward recovery
work authorization system
accept
logic diagram
workspace
cluster checkpoint
replication
spike
internal software quality
process improvement
design characteristic
hierarchy chart
agile project management
box name
incoming link
fail soft
sync
System for Cross-domain Identity Management
team
announcement
method
cohesion
development plan
timer event
exception
qualification requirement
functional cohesion
software-based system
certification process
bit steering
technical complexity adjustment factors
probability
chart
systematic failure
done checklist
allocated baseline
effectiveness assessment
tacit knowledge
generic program unit
source language
working storage
mandatory
processing
block allocation
access facility
foreign key
user guide
extranet
interconnection feature
testing description
working space
dump
equivalent faults
reference mode
problem state
project specification
poker planning
extension
program management
existence dependency
attributive entity type
carrier
risk factor
postamble breakpoint
product baseline
single level encoding
system team
development team
real address
external software quality
figurative constant
single-piece flow
actor
defect
spiral model
specialize
group
complete procedure
subroutine trace
decoupling
empirical process control
criticality
test summary report
use case
violation
dynamic storage allocation
output assertion
inductive assertion method
programmable terminal
historical information
convertibility
service level agreement
command
named constant
trend analysis
performing organization
application server
domain model
relationship name
estimate at completion
associative class
system architecture
metrics framework
minimum marketable features
user type
call by address
error
exploratory testing
language
resource leveling
innovation waste
capsule
operational expense
test data
namespace
regression test
address
configuration identification
synchronous message communication with reply
run
passive interconnection
collapse
public
product analysis
collection-valued
branch testing
suspend
vertical slice
authority
baseline function point count
complete table
customer requirement
error seeding
automatic data processing
project management software
macro-generating program
release planning
change set
single machine microinstruction
text processing
request for tender
mask
dimension table
ordinal scale
feature teams
specification change notice
expected monetary value Analysis
build measure learn
original source statement
machine
project portfolio
activity group
general system characteristics
caution
machine-independent
writing reference
multitasking
hybrid computer
Open Database Connectivity
definitive master version
owned attribute
risk exposure
cynefin
software design requirement
meta-object
nondeliverable item
link type
visual display unit
illustration
n-address instruction
quality assurance
application area
replication schema
architectural runway
link
pseudo
algorithmic list processing language
concurrency
multiple-address instruction
release burndown chart
operational data store
planning processes
business epics
project plan
residual risk
validated learning
chaotic domain
release train engineer rte
procurement documents
personnel
Identity Management
architecture
unambiguous
primitive type
extended entry table
time class
triggering event
aggregation
manufacturing phase
modification request
precompiler
daily stand-up
quantitative risk analysis
direct address
organization
selective construct
multiple readers and writers
low level
analog
code trace
new source statements
previously developed software
dynamic breakpoint
trade-off analysis
representation property
operational testing
mandatory nonidentifying relationship
opportunity study
parallel
operations manual
jump
communications planning
language definition
assessed capability
implementer
semantic agreement
risk handling
project level
migration transparency
item transmittal report
diagram
generation
relocatable
web site
point inflation
customer unit
ancestral diagram
project initiation
multilevel storage
formal programming languages and mathematical languages
post-processor
central processing unit
predictive metric value
reference expression
virtual reference
predictive process
electronic publishing
fault-tolerant
absolute address
forecast
glass box
local customization
contingency reserve
discard
data group
linkage
execution monitor
regression testing
systematic reuse
perform integrated change control
leaf node
variance analysis
dimension mapping category
swarming
application frameworks
binding object
interpret
project scope
datum
project area configuration
macro
evaluation
emulated user
multiprocessing
data input sheet
work breakdown structure
software system
cost of delay
pass-fail criteria
representation
test design specification
critical path methodology
defect repair
walk-through
code review
program status word
project communications management
loosely coupled message communication
project calendar
notice of revision
data processing center
flexibility
submit primitive
node index
sandbox
port-to-port time
control flow trace
deployment plan
release goal
workstation
design phase
level of effort
call
analysis
the operand
roll in
antifragility
developer
design inspection
application-oriented language
assemble
distribute information
Ant with Enterprise Extensions
loopback
documentation development staff
page turning
characteristic entity
counting scope
decision table
asynchronous message communication
entry point
preparation time
alternate flow
global compaction
think time
value engineering
pretested iteration
system software
transparency
one-address instruction
validation testing
object
loader
mean execution time rating value
failure
process capability determination sponsor
parallel classes
software engineering environment
op code
basic engineering object
function point table
two-plus-one address instruction
memory dump
system entity
cost accounting
systems analysis
virtual memory
data mart
process architect
flow target
initiator
release plan
scale
constant-failure period
scrum
attribute indicator
backlog item effort
interface testing
operation code
cluster
program portfolio management
program maintenance manual
variable
level
Java Database Connectivity
project agreement
budget
development testing
code tuning
life cycle model
high level
padding
Delphi technique
leaf diagram
task priority criteria
non-destructive read
magic string
Government off the Shelf
product development effort
ceremony
critical design review
interconnection
emulator
done-done
semantics
test documentation
test item transmittal report
project library
interval scale
training
understandability
discrete data
process action team
pbi slotting
participant property
prettyprinting
virtual address
destination address
source control
specific address
severity
invocation deliver
deployment
requirement standard
semantic error
database design specification
certification criteria
time-critical task
head
service offer
risk criteria
recursive
monadic selective construct
estimate costs
wearout-failure period
timeliness function
integration test
change control board
machine address
technical complexity adjustment
fault masking
arrow
direct insert subroutine
supplementary run
data driven testing
mock object
safety-critical software
design architecture
internal event
unstratified language
restart
interoperability testing
interface requirements specification
do-nothing operation
macro library
constant
data trace
system table
statistically managed process
work in process
passive object
stable branch
recoverability
software design description
operand
A-profile
down time
two-level encoding
linked data
cardinality
corporate governance
exit routine
fault
compile
transactional function type
output
usage mode
request for information
control task
cost-plus-fixed-fee contract
unknown unknowns
application generator
functional manager
test procedure
driven testing
extensibility
microprogram
internal logical file
computer resource allocation
measurement analyst
foreground
Certified Scrum Product Owner
back-to-back testing
data exception
domain
horizontal microinstruction
adjusted function point count
breakpoint
quality subfactor
leading decision
straight-line code
technical performance measurement
interface requirement
software requirements verification
input arrow
help text
indicative function point count
ergonomics
aggregate responsibility
execution trace
executable source statement
block-structured language
design-to-cost
configuration context
program listing
system demo
implied needs
text page
pseudo-instruction
design standard
installed function point count
process asset library
release engineer
open distributed processing
repository workspace
computer software configuration item
added source statements
software reliability
conventions
ordered list
relocatable address
domain engineer
quality measure element
process management
planning game
knowledge base
wizard
relevant stakeholder
implementable story
engineering interface reference management policy
problem domain
demand paging
lag
Viewpoint language
optional nonidentifying relationship nonidentifying relationship
validity summary
generic practice
security branch
work performance information
common coupling
sprint execution
project risk management
firm-fixed-price Contract
attribute name
address part
continuous risk management
tightly coupled message communication
tailoring
nondestructive read
capacity
rapid prototyping
online compiler
capability maturity model
user interface task
mode
data
recto
modular programming
external output
functional configuration audit
overriding property
strategic themes
resource definition
common
overlay supervisor
process
Administer Procurements
computational viewpoint
configuration management system
word processing
template
technical contact
data functions
object reference
program support library
computer science
dumb terminal
program specification
initialization section
variable figurative constant
adaptability
corporate board or equivalent body
cardinality of a multiset
build
WaterScrum
derived requirement
simultaneous
postcondition
artificial intelligence
system profile
fetch
error prediction
address space
performance testing
Simple Cloud Identity Management
Government Off The Shelf
third-generation language
Information Technology
application area level
icon
plan procurement
point design
diagram reference
work package
u-curve optimization
periodic task
page type letter
threshold
value adjustment factor
down
program synthesis
generated address
stream interface signature
base practice
actual time estimation
input
performance
interconnection perspective
production library
director
mutually exclusive clustering
capability
event history
test data generator
transaction-centered design
reusability
waterscrum
construction
system element
design document
risk profile
devops
exit
bit
Monte Carlo simulation
single sign-on
mapping completeness
antipattern
agile retrospective
concurrent enabling
late start date
subprogram
document
float
computerization
modular
class
time
non-deliverable item
process description
design unit
control Information
repo surgery
maintenance enhancement
branch
up time
hardware configuration item
test report
macro definition
specification relationships to one another
event
change management
footer
subclass responsibility
influencer
enumeration type
application system
acceptance
subject domain responsibility
fourth-generation language
monitoring
glass-box testing
logical transaction
root
attribute for quality measure
assessment constraints
intelligent terminal
continuous iteration
beneficiary
test driver
implementation requirement
test criteria
completed change set
capability dimension
testware
parameter
embedded software
hardware design language
web page
critical activity
device interface task
interface control
computer language
software piracy
business value
snapshot
value
test automation
progressive refinement
level 1 control break
reflexive ancestor
purpose
configuration baseline
scope
pre-condition
five levels of agile planning
laptop computer
third normal form
measurement procedure
on-screen documentation
committer
high-level design
alignment
utilization bound theorem
multi-component system
seeding
view
software test environment
three-address instruction
state name
milestone retrospective
program backlog
read
information system needs
rules of simplicity
immediate address
planned process
flow diagram
meta-model
relative loader
object code
project area
build-breaker
peer review
control breakpoint
compatible
total
synchronous
test
verification test
re-entry point
evaluation checklist
N-ary relationship
information item content
fail criteria
electronic data interchange
instruction length
blocking factor
category cluster
downstream
functional complexity
counter
A-0 context diagram
flow chart
practices
software project
total quality management
raw requirement
structured programming
snapshot dump
fault isolation
instrumentation
Program Evaluation and Review Technique
performance indicator
transfer file
external interface file
process reference model
name
assessor
qualitative risk analysis
representation standard
write
manual
priority ceiling protocol
verifiable requirements language
listing
readability
static breakpoint
system flowchart
nonprocedural language
kaizen
stand-alone
nucleus
variable trace
object adapter
baseline design
execution efficiency
metadata
management process
tool
all-at-once product development
schedule
planned finish date
data abstraction
user story points
service import
non-intrinsic relationship
software configuration item
time out
means uncertainty
post-condition
path convergence
risk acceptance
external quality
consequence
move
computer generation
diagram boundary
retrospective
item of documentation
performance specification
base measure
relocatable code
license
granularity
interaction group
integrate
relocating loader
desk checking
base address
body metadata
underflow exception
managed process
toolkit
repo master
status word
linking loader
release train
data store
reusable software product
programming
hostile backout
roll
internal task-structuring criteria
domain analysis
functional analysis
non-primary entity
key
primary entity-type
control chart
materiel
clear text file encoding
competent assessor
transition rule
Government-off-the-Shelf
establish and maintain
network open end
Information-based domain
performance analysis
logical trace
acquisition strategy
well-engineered web site
team release plan
library
metadata model
verb phrase
optimizing process
glossary
viewpoint statement
job step
data set prefix
functionality
business owners
directed graph
run stream
formal design
simplicity
cost-reimbursable contract
extensional set
apportioned effort
benchmark
human resource planning
description standard
integration testing
server
assessment sponsor
audit
measure of performance
software feature
solicitation package
evaluation requester
permanence
conditional information
input assertion
facility
user experience ux
collect requirements
topology
program epics
characteristic
cold standby
ideal day
behavior specification
list processing language
end user
incomplete process
macroassembler
data structure
annotate
dashboard
child diagram
big-bang testing
trace
interrogation
private
points
control schedule
check in
software quality
lean programming
output arrow
prescription
risk management plan
business objective
continuous representation
formal review
learning loop
channel capacity
page frame
contingency plan
user terminal
server-side
multiple-hit decision table
virtual storage
arrows connecting inputs to processing steps and processing steps to outputs
style
recommendation
cause
predecessor activity
reserve
tunneling
time sharing
decomposition diagram
assumptions
user interface sketch
computer crime
organizational policy
bag
mandatory category
user role
information hiding
software testing
array
certified scrum trainer
one-plus-one address address instruction
simulation
manufacture
trademark
computer instruction
technical stories
access transparency
quality in use
program structure diagram
algorithm
genchi genbutsu
acceptance test driven development
topic
process performance
software development process
developer unit
computing system
physical source statement
process improvement project
plan risk management
design view
support manual
done
operating environment
hierarchy
user documentation
embedded computer system
input loopback
provisional assessor
audience research
trailer
performance requirement
crystal
location reference
fast tracking
development branch
product authority
invariant schema
unavoidable technical debt
integrity level
deadlock
impact analysis
data structure-centered design
garbage collection
cut-off date
tree
control arrow
process context
executable requirements specification
baseline document
lean software development
identification
identifier-independent entity
software package
path divergence
risk management
personal stream
calendar
label
property
software engineering
mob programming
load-and-go
war room
essential scrum
partial cluster
tunnel notation
loop-control variable
project risk profile
product vision
rule-based language
packaging
calculator
downward compression
intermediate software product needs
solution domain
model name
material
the three cs
test log
external attribute
two level encoding
static analysis
swap
numeric character
mean time to repair
reliability
emotions seismograph
early start date
access
Boolean expression
static analysis demonstration
standup
entity type
idle workers
product backlog item
burnup chart
synchronize
won't-have features
abstraction
iterative development
cross-referencer
buyer
assist
program instruction
data base
done list
system design
expert system
enabling tokens
user-friendly
first normal form
object model
statement
immediate control
lateral compression
process dimension
user interface
declaration
task interface
computer
component skew
data attribute
hazard identification
trunk
ready
earned value
imperative construct
requirements phase
lifecycle profits
specific symbol
host machine
internal attribute
quality attribute
step
numeric
project notebook
entry
user story
macro generating program
encoding
relocation dictionary
generalization
test bed
straight-line coding
lean agile leaders
location transparency
curriculum standard
define activities
closing processes
acquisition
subordinate web site
tree-structured chart
configuration item form
operational product
manage project team
estimate activity resources
user-story-writing workshop
routine
lead
back matter
design fault
interface design document
life-cycle model
data movement
inspection
functional specification
qualification
report template
sprint backlog
data communication
information product
software reliability management
schedule performance index
marking
immediate instruction
computing system specification concepts
event synchronization
compiler generator
function-oriented design
analogous estimating
coroutine
assessment record
timesharing
operable
measurement sponsor
application attribute
functional size measurement
level 1 termination routine
cross-reference generator
total degree of influence
request for proposal
program structure chart
pig
claim
role-feature-reason
input arc
software requirements engineering
K-base
correctness proof
web
log out
software quality assurance
generalization network
consumer
basic path
product scope description
fact build
evaluation report
machine-oriented language
functional product
deviation
agile software management
hierarchically consecutive
migrated key
continuous improvement
colocation
target of process
architect
sprint demo
initial marking
change
estimate activity durations
remote batch entry
integration hell
functional test
organizational unit
one-to-many relationship
evaluation method
product planning
logical source statement
integrated team
initial program loader
computer-aided design
indirect address
adaptation data
entry criteria
define scope
developmental configuration
organization chart
discrimination
usability testing
Kanban
bundle
test case specification
time slicing
association
header
assembler language
silent grouping
slave state
supercomputer
widget
engineering
scope gallop
client-side
bidirectional traceability
program network chart
level 1 initiation routine
endeavor
diagram feature
maintenance personnel
man-machine interface
precision
burndown chart
log on
project phase
x interceptor
project life cycle
structured program
data flow diagram
associative literal
optional category
resource histogram
root-cause analysis
documentation
schedule model
identity
successful adoption
project quality management
chickens
second-generation language
global attribute
critical chain method
addressing exception
requirements creep
Certified Scrum Trainer
mixed mode
execution
cluster template
modified-off-the-shelf
requirements flow-down
defect report
arrow reference
level of performance
modeling tool
requirements traceability
referential integrity
health
adjusted size
request
design element
checkpoint
marking of a place
direct measure
work effort
cookie
valid
communicational cohesion temporal cohesion
estimated function point count
product line engineering
information processing
element type
return value
importer
buffering
fatal error
software project life cycle process
nondeveloped source statement
meta-entity
three questions
no-operation
estimate to complete
incremental development
measurand
single-address instruction
sequential process
program library
activity-on-node
queue
common storage
instrument
computer network
spreadsheet program
software design verification
ELSE-rule
test procedure specification
community object
deassembler
build pipeline
computing system tool
maintained
derived data
test case
developmental baseline
call tree
architectural epics
instructional mode
software support
medium
indicator
cost of quality
quality requirement
subnetwork
architectural design phase
technology used for evaluation
overlay
directory
transition occurrence
Scrummerfall
afferent
domain engineering
captial expenditure
condition entry
time-now date
condition code
work task
deliver primitive
local configuration
product description
transformation model
architectural feature
ideal hour
appraisal participants
object module
simple token
control clustering
relation
test case generator
current extent
trailing decision
execution result
client
build process
termination construct
sequential construct
structure clash
informal testing
intermittent fault
path expression
microprogrammed computer
working area
cross-compiler
product scope
emotions seismogram
effectiveness
hierarchical modeling
word
usability test
zComponent project
technical requirements
node tree
value trace
technical practices
source code generator
meta-object facility
subclass cluster
outcome measure
editor
backlog
nanocode
role
term evaluation
information need
visual agilexicon
independent entity
conceptual data model
page table
virtual machine
optional subgroup
approved modification
professional standard
function field
as-of date
connectivity
project snapshot
pseudocode
specific code
assessment output
stop
high level language
documenter
reusable
measurement process owner
output arc
architectural description
data-flow trace
direct and manage project execution
decision criteria
security accreditation
invalid
planned value
maintainer
cycle
complexity
error tolerance
project management knowledge area
one-plus-one address instruction
implementable standard
pointer
Object Management Group
delegation
migration
slack
robustness
values
project cost management
responsibility
user group
child box
human resource plan
minimum viable product
built-in class
basic symbol
workload
technical debt
configuration item development record
consistent
top box
pass
F-profile
outsourcing
mandatory subgroup
iteration
variant
white box
architectural style
scalar-valued property
mean time between failures
tier chart
security testing
threat
software safety program
schedule management plan
failure rate
security
product requirement
reachability graph
sprint retrospective
paired programming
signal interface
definition
resident control program
close project or phase
standby time
risk action request
multiaddress instruction
job stream
formal testing
inverse engineering
assessment process
call by reference
chip
static
design analyzer
all-before-any
specification limits
decomposition
repeatability
test environment
action entry
failure transparency
encapsulation
context of use
detailed design description
intrinsic
envisioning
determine budget
cost performance index
segment
block diagram
metacompiler
risk register
resource
computer center
static model
supertype
enterprise value chain
well-formed requirement
final function point count
business intelligence
ask
logical layout
computer graphics
cross-reference list
optional nonidentifying relationship
decision
configuration control board
ancestral box
information system
done-done-done
control scope
test estimation
total correctness
first-generation language
uniqueness constraint
transaction matrix
software development file
internal arrow
whole-team approach
enhancement request
configuration
risk transference
anticipatory paging
initialize
optional attribute
frequent releases
sprint planning meeting
workload model
retirement phase
demonstration
place
risk threshold
modifiable
first generation fifth generation language
category entity
heavyweight process
syntactic agreement
fitness-for-use test
data item
build definition
computer software configuration
tag slide
cadence
process outcome
indirect instruction
allocated configuration identification
pattern
dimension data
background processing
object identifier
artifact
collection property
return
page breakage
Collaborative Lifecycle Management
prolog breakpoint
requirements allocation
warning
system breakdown structure
utilization
activity attributes
microcode
indigenous error
software design
independent state class
implied addressing
cast
working set
metric validation
niko-niko calendar
project release plan
edit
assessment purpose
pre-tested iteration
node letter
function point
OAuth
static schema
active area
problem-oriented language
staffing management plan
test case execution record
product measures
interface task
program design
surrogate key
quality factor
microarchitecture
redundancy
emergence
technology viewpoint
indexed address
knowledge
derived measure
macroprocessor
automate
protocol object
weighted shortest job first
software design audit
time-scaled schedule network diagram
milestone schedule
outer cardinality
project management information system
process metric
test-first development
formal specification
satisfaction
documentation plan
project health
efficiency
utility
forms design sheet
stratified language
commit privileges
lifecycle application
iteration burndown chart
risk monitoring and control
service desk
perform quality assurance
context diagram
execution time
arrow label
project control
content coupling
echo
operating system
information processing requirements
visual display terminal
engineering interface reference management domain
functional organization
black-box testing
version control
data collection
system effectiveness
detailed design
assembler code
test plan
fact table
arc
system resources chart
applicability to a functional domain
risk analysis
triggers
quality metric
infant mortality
maintenance plan
planned start date
pigs and chickens
bottom-up design
static binding
interleave
life cycle
derived attribute
error processing
timeboxing
conversion functionality
inner cardinality
octet
code generator
robust
called diagram
modularization
transition net
sponsor
assembled origin
acceptance test
common area
computer-aided software engineering
entity-relationship map
verification and validation
test suite
artifact type
conditions of satisfaction
desktop publishing
source control management
throughput
foreground processing
resource-limited schedule
compiler code
trace link
meta-scrum
product engineering
risk identification
call trace
design description
system definitions node
extendability
feature team
accident
project function point count
state data
team member
data protection
closed term
setup time
software product
high-level Petri Net graph
backward pass
configuration management database
managed web site
affinity testing
Rule and Constraint Language
character
attribute data type
goal
functional language
coerce
collection-valued property
deliver
dynamic
rich hover
information
meta-
binning
layer
partial
conversion
verify scope
Nassi-Shneiderman chart
export process
security domain
delivery
basic interworking facility
turnkey
formal parameter
agile manifesto
list function
layout
parent function
relative size measure
arc annotation
distributed team
conciseness
realtime
abort
unit development folder
hard failure
argument sort
data mapping template
system interface task
gadget
tightly coupled message communication without reply
change control procedure
box detail reference
root compiler
generalization hierarchy
control loopback
human-machine interface
arrow role
product specification
origin
validity
high-level language
project leader
required outputs
version
state transition diagram
data element type
agent
sequence activities
life-cycle cost
nonidentifying relationship
kano model analysis
calendar unit
data inventory
immutable class
off-the-shelf
targeted technical debt
control limits
output measure
mean execution time reference value
discriminator
daily meeting
risk state
simple buffering
scheduled start date
instruction counter
process capability
code
summary activity
interrupt latency
Certified Scrum Professional
assessment input
nonintrinsic relationship
n-level address
back linking
object type
project planning
engineering change
call reference
purpose statement
non-identifying relationship
microoperation
operator's manual
termination deliver
complexity matrix
work breakdown structure component
Project Management Body of Knowledge
system model
project integration management
friend
risk reduction
strategic technical debt
service export
waterfall model
risk mitigation
nonfunctional requirements
dialog
software product developer
degree of influence
system-of-interest
enhancement project function point count
field of application
data definition
multi-valued property
stabilization phase
context-sensitive help
service management
provision
criteria
immediate data
trap
architecting
actual cost of work performed
indirect measure
subject system
Data Movement Service
evaluation procedure
facilitation
initial marking of a place
low-level design
economic filter
calling sequence
concurrent communication diagram
dyadic selective construct
software design notation
code breakpoint
script
local data
organizational maturity
incremental funding
complete
reproducibility
message
bioteam
perform quantitative analysis
test suite execution record
explicit address
application lifecycle management
quality model
quality management
change control system
waste
compiler directive source statement
mura
information processing system
data processing system
character set
attributed relationship
nondevelopmental
call by value
loop
story grooming
story points
quantity
context
reserved word
software test incident
finish-to-finish
finite state machine
feature reference
scrum master
value range constraint
software quality in use
system testing
supporting process
lightweight process
approved change request
corrective action
dynamic allocation
source code data
tutorial
condition
supervisor state
table of contents
common cause
load
multiple inclusive selective construct
pirate metrics
common environment coupling
maintenance rate
Planning Poker
comment
language standard
activity type
asynchronous task
demo demonstration
invest
machine language
engineering interface reference
identifying relationship
storage efficiency
existing software
discrete type
gap
cost constraint
communicational cohesion
solution
product management
risk management system
software requirement
paging
assessment instrument
timeliness rating value
dynamic error
project deliverable
self-documented
composite key
integrity
distributed processing
pair programming
work breakdown structure dictionary
coincidental communicational cohesion
continuous forms
quick design session
prediction
review
job control language
workspace snapshot
algebraic language
entity instance
information retrieval
requirements specification
Requirements Management Rich Text Format
supervisory program
system architect
task
trade study
deliverables
cost-plus-fee
top-level function
backward execution
iterative and incremental process
parser
convention
sign up for tasks
repetitive addressing
customer
test script
engineering viewpoint
cargo cult
root cause analysis
derived property
stream interface
conformance
anticipatory buffering
unnecessary formality
customer-value-creation sprint
structured walkthrough
bathtub curve
multilevel address
egoless programming
commit
source statement
random cause
information analysis
checkpointing
detailed design phase
class-level responsibility
dynamic skeleton
availability
child entity
security policy
demonstrative product
selective trace
schedule analysis
iteration velocity
network
chain type
assumption
standup meeting
storage capacity
modifiability
long-term asset
query language
complexity attribute
using smartsheet as your agile project management tool
text
substitutability
data element
preventive action
intellectual property
software safety
transportability
story point
active redundancy
risk metric
zFile
relocating assembler
synthetic address
story mapping
product sashimi
configuration provider
team area
task inversion
authoring language
interrupt priority
bug seeding
schedule network analysis
investment
control field
transfer
model glossary
control-flow trace
ScrumMaster
relocation factor
command language
literal
process purpose
sequential
outgoing change set
access method
feasibility study
interactive
use case specification
instance-level operation
terminal symbol
management review
flow of control
rescue point
finish-to-start
post-mortem dump
capex
physical requirement
electronic copy
architectural epic kanban
test coverage
networking
functional baseline
graph
life-cycle processes
page
machine-readable
schedule performance
operation exception
process architecture
crashing
basis set
design
hardware
throughput rating value
zFolder
personal computer
maintainability
value map
opportunity
assignment
package
bill of materials
system hazard
identifier dependency
postmortem dump
management
completion code
common-environment content coupling
architectural structure
forward pass
metric value
down busy
breaking the build
development cycle
requirements analysis
offset
transactional functions
updatable argument
X federation
Scrum
robotics
system of systems
reading reference
triple constraint
high-order language
project time management
dependency build
data structure diagram
operational concept description
genba
source program
planning board
integration
documentation tree
local area network
concurrent task architecture
global variable
user manual
sprint goal
absolute loader
stakeholder value
adoption item
agile
anomaly
control account
respecialize
test set architecture
developers and testers
screen dump
unspecialize
of accounts
place type
appraisal team leader
measurement standard
budgets
enterprise viewpoint
logic programming language
event-sequencing logic
loop control
strong typing
en dash
collective ownership
scrummaster
commercial-off-the-shelf
test effort
model hierarchy
macroprogramming
network logic
batch size
spooler
level of abstraction
party
diagnostic
Pareto chart
single-valued property
program increment
team room
budgeted cost of work scheduled
busy
assertion
effective instruction
inputprocess-output chart
nonprogrammable terminal
import process
log in
waterfall process
tinderbox
agile software development methodology
sprint planning
instruction format
data processing
data set definition
computer resource
interrupt service routine
risk avoidance
alias
audience
scheduler
fifth-generation language
persistence schema
linker
test incident report
chicken
software design representation
continuous integration
epilog breakpoint
scrum team
information content
budget at completion
user requirements
transaction cost
principle
auto-deploy
inspect and adapt
story
control store
executive
search path
scorecard
real-world object
design review
inventory
extract
usability laboratory
privileged state
endeavour
elementary process
exporter
category discriminator
up
safety
program definition language
innovation and planning
requirements traceability tool
schedule based planning
illustrative product
hardware engineering
software life cycle model
story test
enabling system
N 2 diagram
existence constraint
scrum framework
hard copy
prestore
fail safe
deactivation
real storage
termination submit
concurrent
software life cycle
story splitting
assembly
design-to cost
report
computer program
library definition
design level
refactoring
acquirer
domain definition
test objective
box
meta-meta-relationship
kanban
transactional process
logical relationship
lean ux
acceptable
critical range
project schedule
bottom-up
evaluation tool
enterprise architect
task type
n-plus-one address instruction
optional
control
application manager
acceptability
program flowchart
closed loop
timebox
delivery rate
sprint review
software user documentation
clabject
symbolic execution
entrance
devop
project management process group
complexity points
threat modeling
complex domain
staff-hour
software requirements review
data breakpoint
object program
flowchart
requested change
sample instance diagram
analyst
memory capacity
reserved word in a computer language
rework
design constraint
integer type
acceptance-test-driven development
priority inversion
enabling
coupling
memory map
failsafe
test generator
software transition
scrummerfall
mobility schema
pseudo-op
user-identifiable
certified scrum product owner
dynamic restructuring
exit criteria
exclusive requirement
Communication Technology
task-clustering criteria
inherited error
software-intensive system
mechanism loopback
external stakeholders
efferent
arrow meaning
atomic type
simple domain
software component
user view
project management office
risk category
defect removal
architectural design
nest
sustainable pace
special cause
contiguous allocation
system definitions
lookup build
computer program component
parse
system stakeholder
objref
total float
all-at-once development
record element type
consumer software package
request for change
micro code
brainstorming
workflow
mixed type
low level language
measurement librarian
character type
point
generation language
conditional branch
maintenance project
pathological coupling
maintenance branch
information item type
required inputs
exploitation
prioritized list
earned value management
pause
microprogramming
definition is advanced as a proposed standard
testability
interpretive code
measuring instrument
vanity metric
asset
foldout
relocation transparency
service primitive
control variable
transformation analysis
loaded origin
preventive maintenance
system definition reference search
local compaction
transaction analysis
agile methods
nanostore
waterfall
software monitor
auto-resolve conflict
functional architecture
evaluation sponsor
document control
software tool
reader note
information radiators
server friend
signpost
work in progress
loop assertion
backout
programming system
manufacturer
restart point
monitoring and controlling processes
correctability
timely throughput
programmer
taskboard
interface type
system design review
net
instruction time
estimation
suspicion profile
link index provider
integrity level scheme
monitor and control risks
data flow
program construct
residual control
branching
event sequence analysis
menu structure
metamodel
single-step execution
programming support environment
job
maintainability plan
set-up time
complex adaptive system
test phase
adaptation parameter
many-to-many relationship
paper documentation
process assessment model
sprint plan
pattern-sensitive fault
fixed-date release
object-oriented design
owner
scenario
measurement user
reuse
compaction
functional service
design authority
data-sensitive fault
input routine
systems integration testing
certification property
software development folder
automatic
data function type
privileged instruction
conversational compiler
report standard
confidence threshold
daily huddle
product line
report server
interpreter
bottom-up estimating
address format
stream
on-line compiler
relative address
big visible charts
function point analysis
project management plan
commit war
second normal form
initial program load
star schema
procedure
assembler
format
argument
finish date
boot
iteration plan
identifier-dependent entity
unbundle
start date
rapid application development rad
undirected graph
reusable product
mirror site
boundary arrow
operation interface signature
behavior driven development
scope management plan
preprocessor
return on investment
go to
total cluster
consecutive
descendent box
device
input sort
categorization scheme
web application
input-output coupling
lowclass
heartbeat retrospective
call by location
view diagram
variance
critical piece first
abstract data type
process capability level
case
uncertainty
pilot project
ratio
unit testing
reactivation
control coupling
deliverable
store
real-time
inline code
problem description
checkout
nondelivered source statement
production
percent complete
environment
certified scrum professional
voice of the customer
diagnostic manual
contribution
pass criteria
coordination
term
direct metric
access routine
identify risks
end-user
prototyping
interruption
stage
high-level net
shell
generic entity
serial construct
enhancement
channel
anticipatory process
data type
automation
art metrics
operations
associative entity
descendent diagram
path analysis
just in time
team selection plan
dimension mapping table
demodularization
data repository
output argument
relationship
unwind
incremental productivity
dependent entity
protected
digital computer
program pi objectives
strategic filter
many-sorted algebra
definition of ready
supervisor
naive technical debt
exception handling
assembly code
unconditional jump
closed subroutine
code smell
portal
process capability level rating
top-down decomposition
stability schema
collection class
computational interface template
partitioning
net graph
meaning
functional unit
disassemble
non-terminal symbol
occupational title standard
element
generalization taxonomy
producer
functional design
development project function point count
compiler compiler
precondition
language processor
operational scenario
feature
nonkey attribute
Open Services
natural language
hierarchical decomposition
contract management plan
risk
remote job entry
multiset
backward recovery
feedback
supporting data item
operator manual
t-shaped skills
selective choice construct
application administration function
debug
constraint
tightly coupled message communication with reply
work activity
functional requirement
traceable
fragile
mainframe
inherited attribute
attribute group
detailed design specification
transition condition
fibonacci sequence
standby redundancy
computational object template
control point
zComponent
emulation
call list
software quality metric
users' manual
program librarian
hacker
configuration audit
project file
happy day scenario
engineering change proposal
roll back
vertical microinstruction
preliminary design
master schedule
structured programming language
box number
information radiator
software specification review
counting rule
module
one-level address
interrupt mask
commit message
application function point count
scope creep
assessment team
configuration status accounting
complete cluster
progressive elaboration
control language
velocity
double-operand instruction
model
simulator
information viewpoint
picture
conditional unconditional jump
downward compatible
conformity evaluation report
relative estimation
action of interest
tunneled arrow
sample instance table
source program object module
crisis management
installation manual
internal stakeholders
compression
standard process
diagram page
decompiler
interrupt
human behaviour
metric
macroinstruction
daily standup
effective address
marginal economics
input primitive
change dump
pseudo code
nice-to-have features
collection cardinality
project resource constraint
preliminary design review
dot notation
real time
data information
accuracy
subject matter expert
develop project management plan
measure of effectiveness
reference user requirement collection
predictive metric
continuous delivery
entity attribute
quality
metalanguage
not printable
online documentation
categorization
portable computer
transactional function
metrics sample
implementation phase
functional domain
subtype
entity-relationship diagram
functional decomposition
parent entity
time and material contract
office automation
business-it alignment
open subroutine
synchronization engine
path condition
burn-in period
configuration specification
co-location
three-plus-one address instruction
functional domain categorization
instance-level attribute
scalar property
actual result
meta-meta-entity
record type
team demo
cost-plus-incentive-fee contract
object of interest
absolute code
base artifact
conversational
conditional jump
return code
deleted source statement
to-compete-performance index
dynamic invocation
incomplete cluster
input argument
Intranet
pixel
catastrophic failure
feasibility
usability
content store
Open Services for Lifecycle Collaboration
global data
activity identifier
methodology element
capable process
mistake
class data
memory
priority interrupt
acceptance testing
intermediate software product
quality factor sample
unpack
start-to-finish
subject-matter expert
housekeeping operation
crisis
computer resources
relocate
nanoinstruction
epic owner
program-sensitive fault
synchronous message communication
top-down
fixed-scope release
Lifecycle Query Engine
global configuration
parallel run operation
multiset cardinality
waiver
sample instance
dynamic relocation
scalar
virtual team
complicated domain
traditional development process
change project function point count
ODP-RM
sustainment
measurement
include
control data
line manager
vendor branch
standard
transaction
critical value
software release management
variability
project management team
imperative statement
module data
product family
system integration
enterprise environmental factors
computer performance evaluation
development record
contract
fail
software diversity
value chain
quality evaluation
dimension build
service
invest acronym
corporate executive level
hazard
diversity
decision tree analysis
code churn
develop schedule
mean execution time
matrix organization
behavior
process capability determination
ground term
reference user requirements
bootstrap loader
design entity
purchaser
retirement
multiplicity
critical path method
initiating processes
coding
Certified ScrumMaster
function
detailed design review
pipeline
absolute
microcode assembler
input place
functionality testing
stand up
project attribute
transition
timeline
control board
test harness
storyboard
system of interest
problem definition
test design
failure ratio
bootstrap
assessment
extend
kernel entity
pack
profile
mutation testing
functional performance requirement
expert judgment
microchip
schedule compression
common-environment coupling
perform qualitative analysis
causal analysis
backup
interface
resource group
issue
page swapping
grade
organizational process assets
product backlog grooming
data flow trace
memory compaction
pairing
glossary page
state class
iteration backlog
white-box testing
moscow
branchpoint
symbol table
named constraint
code inspection
signal interface signature
direct metric value
response time
master state
portability
development specification
micro code assembler
table-driven method
diagram feature reference
requirements management
class path
task completion
navigational aids
agreement
common data
limited entry table
dynamic schema
user
scaffolding
procedural language
planning package
candidate key
remote team member
performance reports
subsystem
process standard
mock-up
root arrow segment
resource monitor task
interconnection group
call arrow
defect arrival rate
external measure
two-address instruction
clear
sizing
project organization chart
active white space
effectiveness analysis
back-up
requirements review
indicator value
machine independent
mock objects
product configuration identification
lean
one-ahead addressing
impediment
Grosch's law
flowcharting
main program
critical information
project team
custom software
thrashing
zero-address instruction
RM-RTF
parametric estimating
digit numeric character
stepwise refinement
copy
invitation for bid
protection exception
aperiodic task
signature
project procurement management
budgeted cost of work performed
task mode
timing
load module
activation constraint
access permission
escaped
network planning
composite type
relational data
submit
list
binding
instance
acceptance criteria
diagram title
procurement management plan
core dump
software unit
software
replay
contractor
functional size
cyclic search
source
binding endpoint identifier
integrated circuit
seller
Monte Carlo analysis
private type
sprint
model name abbreviation
processor
evaluator
fault tolerance
specification by example
dependent state class
viewpoint
simultaneous recursion
verification
mutable class
differential dump
should-cost estimate
self-relative address
risk breakdown structure
perform quality control
design concept
menu
business epic kanban
main procedure
syntax error
digraph
footnote
menu by-pass
buffer
mapping
box diagram
cross-reference tool
competent
technique
end uncertainty
report performance
work item
project charter
task board
precedence relationship
fail-fast
changeover system
global configuration management
reserve analysis
statement testing
root segment
use case model
staged representation
base functional component
hammock activity
economically sensible scrum
rating level
capital expenditure
web app
event timeline
track build item
change record
completion time theorem
defined process
known technical debt
scope baseline
objective
risk assumption
kernel
Scrum team
model note
request token
design to cost
validated metric
transition mode
multi-valued
executive state
file
preamble breakpoint
requirements partitioning
symbolic address
product standard
download
cross-functional team
language mapping
soft copy image
unit requirements documentation
application software
chart of accounts
portfolio management
replication transparency
executing processes
logical file
interface role
interface repository
product
chain
plan-driven process
program mutation
software product evaluation
content assist
system under test
configuration management
note
subject area
procedural cohesion
dynamic model
software life cycle process
widow
change authority
verification method
access token
test description
test specification
verifiable
automated verification system
business rule
interactive language
sign-on
non-key attribute
e-mail
near-critical activity
test level
definition of done
real-time scheduling theory
computer software component
internal measure
organization level
corrective maintenance
certification
nano code
supplier
software development library
minimap
proposal
commitment
rating
external interface requirement
software project life cycle
idle standby
reversible execution
process area
synchronous request
classification
process profile
software development
design methodology
lifecycle tool
specification
system requirements review
wag
system requirements specification
partial correctness
semaphore
overhead time
servant leader
fail-safe
immediate effective instruction
evaluation group
software acquisition process
portfolio backlog
playback
prompt
address modification
back link
notation standard
symbol
data model
blocked
meta-attribute
detailed function point count
interoperability
bind
concept phase
schedule variance
Boolean signature
system development
pseudo operation
block
user persona
error prediction model
punch list
archival pages
community
project control point
process owner
storage
stakeholder
measurement experience base
configuration item
object type set
fault seeding
policy
independent verification and validation
lessons learned
fourth generation language
instantiation
table of effective pages
estimate
log off
repo bloat
computer security
non-developed source statement
application engineering
dynamic resource allocation
roll out
problem
request for quotation
monitor
input-process-output
data provider
defect density
attribute
reused source statement
system follow-up
instruction
structure chart
repository
configuration diagram
tailoring guideline
complexity of a function
unique function
priority
contract work breakdown structure
executive program
command-driven
config spec
input-process-output chart
order language
period
association management facility
artificial language
electronic mail
computer-aided
reset
read-only
continuous deployment
dependability
incremental compiler
backup programmer
consistency
process improvement objective
meta-meta-attribute
task behavior specification
workspace flow target
item
project scope statement
scrum of scrums
failure mode and effect analysis
spool
Gantt chart
performance measurement baseline
two-level address
external
platform
computer system
entity-relationship relationships among them
class-level operation
internal quality
calling box
straightline coding
disclaimer
nontechnical requirement
common ancestor constraint
backlog refinement
T-shaped skills
functional process
reentrant
scheduled finish date
field
reflexive
requirements traceability matrix
